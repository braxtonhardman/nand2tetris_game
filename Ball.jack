//This is the ball class for drawing the balls to hit the person
//05/04/2025

class Ball
{
    field int x, y, vx, vy, ballR; //basics for the ball height and speed and what not
    field int gravity; //gravity constants to work with our parabolic eqautions
    field boolean right; //used to see what direction we need to go for x
    
    //Make the constructor for the ball
    constructor Ball new(int startX, int startY, int xPow, int yPow, boolean rightIn)
    {
        // initialize all the fields correctly
        let x = startX;
        let y = startY;
        let gravity = 2;
        let ballR = 5;
        let right = rightIn;

        //Now set the values for how we are gonna calculate the ball movement
       if(right) //player is shooting right (adjust x velocity)
       {
            let vx = xPow;
       }
       else //player is shooting left so move x-pow to negative
       {
            let vx = -xPow;
       }

       //Now since we're dealing with pixel space closer to the ground means a positive y so we're gonan invert the y-value so the ball can go "up" in the user perspective
       let vy = -yPow;

        return this;
    }   


    //Now create the move function to calculate the ball's next x and y address
    method void move()
    {
        //create the diameter for the ball based on radius to use for boundry calculations
        var int diameter;
        let diameter = Math.multiply(ballR,2);

        //Update the position and then apply the gravity to vertical velocity (over time)
        let x = x + vx;
        let y = y + vy;
        let vy = vy + gravity;

        //check and make sure that X can't go above or below the memory mapp; Since diameter
        if(x < (0 + diameter))
        {
            let x = (0 + diameter);
        }
        if(x > (511 - diameter))
        {
            let x = (511 - diameter);
        }

        //Now do the same thing for Y
        if(y < (0 + diameter))
        {
            let y = (0 + diameter);
        }
        if (y > (255 - diameter))
        {
            let y = (255 - diameter);
        }           
        return;
    }

    //now do the draw method for our ball
    method void draw()
    {
        do Screen.setColor(true);
        do Screen.drawCircle(x,y,ballR);
        return;
    }

    method void clearBall() //erase the ball
    {
        do Screen.setColor(false); //basically setting the color to white
        do Screen.drawCircle(x,y,ballR);
        return;
    }

    //couple accessors and mutators for the current x & y of the ball
    method int getX()
    {
        return x;
    }
    method int getY()
    {
        return y;
    }

}